// Code generated by MockGen. DO NOT EDIT.
// Source: messaging/zaws/queue_publisher.go

// Package mock_zaws is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIQueuePublisher is a mock of IQueuePublisher interface.
type MockIQueuePublisher struct {
	ctrl     *gomock.Controller
	recorder *MockIQueuePublisherMockRecorder
}

// MockIQueuePublisherMockRecorder is the mock recorder for MockIQueuePublisher.
type MockIQueuePublisherMockRecorder struct {
	mock *MockIQueuePublisher
}

// NewMockIQueuePublisher creates a new mock instance.
func NewMockIQueuePublisher(ctrl *gomock.Controller) *MockIQueuePublisher {
	mock := &MockIQueuePublisher{ctrl: ctrl}
	mock.recorder = &MockIQueuePublisherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIQueuePublisher) EXPECT() *MockIQueuePublisherMockRecorder {
	return m.recorder
}

// Publish mocks base method.
func (m *MockIQueuePublisher) Publish(message string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Publish", message)
	ret0, _ := ret[0].(error)
	return ret0
}

// Publish indicates an expected call of Publish.
func (mr *MockIQueuePublisherMockRecorder) Publish(message interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Publish", reflect.TypeOf((*MockIQueuePublisher)(nil).Publish), message)
}

// PublishWithAttributes mocks base method.
func (m *MockIQueuePublisher) PublishWithAttributes(message string, attributes map[string]string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PublishWithAttributes", message, attributes)
	ret0, _ := ret[0].(error)
	return ret0
}

// PublishWithAttributes indicates an expected call of PublishWithAttributes.
func (mr *MockIQueuePublisherMockRecorder) PublishWithAttributes(message, attributes interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PublishWithAttributes", reflect.TypeOf((*MockIQueuePublisher)(nil).PublishWithAttributes), message, attributes)
}
